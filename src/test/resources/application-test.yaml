app:
  name: pn-external-channels

management:
  endpoint:
    health:
      enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

server:
  tomcat:
    connection-timeout: -1
  port : 8080

general:
  message:  "PN External Channels Microservice"

logging:
  level:
    org:
      springframework:
        web: DEBUG
        ws:
          client:
            MessageTracing:
              received: TRACE
              sent: TRACE
          server:
            MessageTracing:
              received: TRACE
              sent: TRACE

spring.autoconfigure.exclude:
  - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
  - org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
  - org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration

spring:
  application:
    name: pn-external-channels
  main:
    banner-mode: off
    log-startup-info: true
  jackson:
    deserialization:
      fail-on-ignored-properties: false
    default-property-inclusion: non_absent
  cloud:
    stream:
      default:
        consumer:
          concurrency: 3
          maxAttempts: 3
          backOffInitialInterval: 3000
          backOffMaxInterval: 100000
          backOffMultiplier: 2.0
          defaultRetryable: true
          retryableExceptions:
            java.lang.IllegalStateException: false
          batch-mode: false
        producer:
          partition-key-expression: headers['partitionKey']
      bindings:
        pnextchnnotifpecinbound:
          group: pn-extchn-group
          destination: PN.NotifPecInbound
          contentType: application/json
        pnextchnelabresult:
          group: pn-extchn-group
          destination: PN.ElabResultInbound
          contentType: application/json
        pnextchnstatus:
          group: pn-extchn-group
          destination: PN.StatusOutbound
          contentType: application/json
        pnextchnerror:
          group: pn-extchn-group
          destination: PN.ErrorOutbound
          contentType: application/json
      kafka:
        default:
          consumer:
            autoCommitOffset: true
            enableDlq: true
            autoCommitOnError: true
            configuration:
              max.poll.interval.ms: 600000
              max.poll.records: 500
              session.timeout.ms: 10000
              heartbeat.interval.ms: 3000
              fetch.min.bytes: 1024
              fetch.max.wait.ms: 500
              fetch.max.bytes: 52428800
              max.partition.fetch.bytes: 1048576
        bindings:
          pnextchnnotifpecinbound:
            consumer:
              dlqName: PN.NotifPecInbound.dlq
          pnextchnelabresult:
            consumer:
              dlqName: PN.ElabResultInbound.dlq
          pnextchnstatus:
            consumer:
              dlqName: PN.StatusOutbound.dlq
          pnextchnerror:
            consumer:
              dlqName: PN.ErrorOutbound.dlq
        binder:
          configuration:
            isolation.level: read_committed
          brokers: kafka
          defaultBrokerPort: 9092
          minPartitionCount: 3
          autoCreateTopics: true
          autoAddPartitions: true
          headerMapperBeanName: defaultKafkaHeaderMapper
          transaction:
            #transactionIdPrefix: tx-tt-service-group-${random.uuid}-
            transaction.timeout.ms: 900000
            producer:
              configuration:
                enable.idempotence: true
                max.in.flight.requests.per.connection: 5
                retries: 2147483647
                acks: all
  data:
    cassandra:
      password: cassandra
      username: cassandra
      keyspaceName: external_channel
      contactPoints: localhost
      port: 9042
      schemaAction: CREATE_IF_NOT_EXISTS
      local-datacenter: datacenter1
    mongodb:
      host: localhost
      port: 27017
      database: external_channel
      username: root
      password: pass12345

file-transfer-service:
  implementation: aws

s3:
  auth:
    accessKey: PN-TEST
    secretKey: PN-TEST
  config:
    endpoint: http://localhost:4566
    region: us-east-1
    retry:
      delay: 1000
      attempts: 3
  buckets:
    external-channels-out: external-channels-out
    external-channels-in: external-channels-in

job:
  cron-expression: "0 0 */3 ? * *" # OGNI 3 ORE
  # cron-expression: "*/10 * * * * *" # OGNI 10 SEC (TEST)
  batch-size: 1
  csv-template-id: 8

topic:
  error: error-messages

dev-options:
  fake-pn-ext-chn-service: false