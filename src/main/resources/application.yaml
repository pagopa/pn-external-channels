app:
  name: pn-external-channels

general:
  message:  "PN External Channels Microservice"

# Middleware configuration
pn:
  env:
    runtime: PROD
  middleware:
    init:
      cassandra: true
      aws: true

aws:
  use-aws-keyspace: true

management:
  endpoint:
    health:
      enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: false
    shutdown:
      enabled: false
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  config: classpath:logback.xml

spring.autoconfigure.exclude:
  - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
  - org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
  - org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration

file-transfer-service:
  implementation: aws

spring:
  application:
    name: pn-external-channels
  main:
    banner-mode: off
    log-startup-info: true
  jackson:
    deserialization:
      fail-on-ignored-properties: false
    default-property-inclusion: non_absent
  cloud:
    stream:
      sqs:
        bindings:
          pnextchnnotifpecinbound:
            consumer:
              snsFanout: false
          pnextchnelabresult:
            consumer:
              snsFanout: false
  data:
    cassandra:
      schemaAction: NONE
      request:
        consistency: local_quorum

s3:
  retry:
    delay: 1000
    attempts: 3
  buckets:
    physicalDestination: "EsitiCartacei/"
    digitalDestination: "EsitiDigitali/"

job:
  cron-expression: "0 * * * * *" # OGNI MINUTO
  batch-size: 10
  messages-csv-template-id: 8
  results-csv-template-id: 4
  customer: 8585
  macroservice:
    digital: 5066
    physical: 5065

emailSender:
  content-type: HTML
  protocol: smtp
  host: smtp.gmail.com
  port: 587
